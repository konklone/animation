<!DOCTYPE html> 
<html lang="en"> 
<head> 
  <meta charset="utf-8"> 
  <title>Playground</title> 

  <script type="text/javascript" src="jquery-1.8.1.min.js"></script>
  <script type="text/javascript" src="three.min.js"></script>
</head>
 
<body>

<script type="text/javascript">
  var renderer, scene, camera;
  
  var sphere;

  var config = {
    webgl: false,
    width: 400,
    height: 300
  }

  $(function() {
    init();
    animate();
  });

  function init() {
    // webGL or Canvas?
    renderer = config.webgl ? new THREE.WebGLRenderer() : new THREE.CanvasRenderer();
    renderer.setSize(config.width, config.height);
    $("#container").append(renderer.domElement);

    // a new scene
    scene = new THREE.Scene();

    // camera
    var viewAngle = 45,
      aspect = config.width / config.height,
      near = 0.1,
      far = 10000;
    camera = new THREE.PerspectiveCamera(viewAngle, aspect, near, far);
    scene.add(camera);
    camera.position.z = 300; // the camera starts at 0,0,0, so pull it back

    
    /****** objects in scene *********/
    var sphereMaterial = new THREE.MeshLambertMaterial({
      color: 0xCC0000,
      wireframe: true
    });

    var radius = 100,
        segments = 16,
        rings = 16;
    sphere = new THREE.Mesh(
      new THREE.SphereGeometry(radius, segments, rings),
      sphereMaterial
    );
    scene.add(sphere);


    /***** lighting ****/

    var pointLight = new THREE.PointLight(0xFFFFFF);

    // set its position
    pointLight.position.x = 10;
    pointLight.position.y = 50;
    pointLight.position.z = 130;

    // add to the scene
    scene.add(pointLight);
  }

  function animate() {
    requestAnimationFrame(animate);

    sphere.rotation.x = Date.now() * 0.0005;
    sphere.rotation.y = Date.now() * 0.001;

    renderer.render(scene, camera);
  }
</script>

  <div id="container">
  </div>

</body>
 
</html>